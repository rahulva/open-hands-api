plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
//	implementation 'org.liquibase:liquibase-core' TODO

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	testImplementation 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor:3.0.4')

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core:3.24.2'

	testImplementation('org.testcontainers:junit-jupiter:1.17.6')
	testImplementation('org.testcontainers:mysql:1.17.6')
	testImplementation("org.springframework.boot:spring-boot-testcontainers:3.1.6-SNAPSHOT")

//	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.7.0'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}